$date
	Mon Nov  7 00:54:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU32_test $end
$var wire 1 ! zero $end
$var wire 1 " overflow $end
$var wire 32 # out [31:0] $end
$var wire 1 $ carryout $end
$var reg 32 % in0 [31:0] $end
$var reg 32 & in1 [31:0] $end
$var reg 4 ' op [3:0] $end
$var reg 4 ( op1 [3:0] $end
$scope module alu $end
$var wire 32 ) in0 [31:0] $end
$var wire 32 * in1 [31:0] $end
$var wire 4 + op [3:0] $end
$var wire 4 , op1 [3:0] $end
$var wire 1 ! zero $end
$var wire 1 " overflow $end
$var wire 32 - out [31:0] $end
$var wire 1 $ carryout $end
$scope begin genblk1 $end
$scope module adder $end
$var wire 32 . in0 [31:0] $end
$var wire 32 / in1 [31:0] $end
$var wire 4 0 op1 [3:0] $end
$var reg 1 $ carryout $end
$var reg 32 1 out [31:0] $end
$var reg 1 " overflow $end
$var reg 1 ! zero $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000000000000000000000000 1
b0 0
b1 /
b1111111111111111111111111111111 .
b10000000000000000000000000000000 -
b0 ,
bx +
b1 *
b1111111111111111111111111111111 )
b0 (
bx '
b1 &
b1111111111111111111111111111111 %
0$
b10000000000000000000000000000000 #
1"
0!
$end
#20000
0"
b10000 #
b10000 -
b10000 1
b1111111111111111111111111111111 &
b1111111111111111111111111111111 *
b1111111111111111111111111111111 /
b1111 %
b1111 )
b1111 .
b1 (
b1 ,
b1 0
#40000
1"
b1110000000000000000000000000001 #
b1110000000000000000000000000001 -
b1110000000000000000000000000001 1
b11110000000000000000000000000000 %
b11110000000000000000000000000000 )
b11110000000000000000000000000000 .
b10 (
b10 ,
b10 0
